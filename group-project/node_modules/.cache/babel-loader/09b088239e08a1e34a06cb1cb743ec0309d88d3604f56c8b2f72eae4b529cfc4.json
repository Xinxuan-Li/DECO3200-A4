{"ast":null,"code":"var _jsxFileName = \"/Users/hong-gabin/Desktop/DECO3200_A4/DECO3200-A4/group-project/src/components/DishCard.js\",\n  _s = $RefreshSig$();\n// This file contains dishes card within each country, under traditional dishes tab.\n\nconst PropTypes = require(\"prop-types\");\nimport React, { useReducer } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DishCard = ({\n  dishName = \"Dish name\",\n  dishNameCountry = \"Dish name\\nfrom CountryName\",\n  //Format text\\ntext\n  dishIntro = \"elit, sed do eiusmod tempor incididunt ut labore \\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\",\n  cardType = \"Dish name\",\n  property1\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, {\n    property1: property1 || \"default\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dish-card ${state.property1}`,\n    onMouseLeave: () => {\n      dispatch({\n        type: \"mouse_leave\"\n      });\n    },\n    onMouseEnter: () => {\n      dispatch({\n        type: \"mouse_enter\"\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlap-group\",\n      children: state.property1 === \"hover\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-name\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-wrapper\",\n            children: [dishName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), dishNameCountry.split(\"\\n\").map((line, index) =>\n          /*#__PURE__*/\n          //Ensure dishNameCountry always has the format \"text\\ntext\" \n          _jsxDEV(\"span\", {\n            className: index === 0 ? \"span\" : \"text-wrapper\",\n            children: line\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-text\",\n          children: \"Learn More >\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), state.property1 === \"default\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-name-2\",\n            children: dishName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"card-deco-line\",\n            alt: \"Card deco line\",\n            src: \"https://c..svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card-img\",\n          alt: \"Card img\",\n          src: \"https://c..png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-intro\",\n          children: dishIntro\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-text-2\",\n        children: cardType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-indication\",\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), state.property1 === \"hover\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img\",\n        alt: \"Card img\",\n        src: \"https://x.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-deco-line-2\",\n        alt: \"Card deco line\",\n        src: \"https://2.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(DishCard, \"eLK41MIDfRlJtlPmjqlvcNi1VcQ=\");\n_c = DishCard;\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"mouse_enter\":\n      return {\n        ...state,\n        property1: \"hover\"\n      };\n    case \"mouse_leave\":\n      return {\n        ...state,\n        property1: \"default\"\n      };\n    default:\n      return state;\n  }\n}\nDishCard.propTypes = {\n  dishName: PropTypes.string,\n  dishNameCountry: PropTypes.string,\n  dishIntro: PropTypes.string,\n  countryName: PropTypes.string,\n  cardType: PropTypes.string,\n  property1: PropTypes.oneOf([\"hover\", \"default\"])\n};\nexport const PropertyHover = () => {\n  return /*#__PURE__*/_jsxDEV(DishCard, {\n    property1: \"hover\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 10\n  }, this);\n};\n_c2 = PropertyHover;\nvar _c, _c2;\n$RefreshReg$(_c, \"DishCard\");\n$RefreshReg$(_c2, \"PropertyHover\");","map":{"version":3,"names":["PropTypes","require","React","useReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","DishCard","dishName","dishNameCountry","dishIntro","cardType","property1","_s","state","dispatch","reducer","className","onMouseLeave","type","onMouseEnter","children","fileName","_jsxFileName","lineNumber","columnNumber","split","map","line","index","alt","src","_c","action","propTypes","string","countryName","oneOf","PropertyHover","_c2","$RefreshReg$"],"sources":["/Users/hong-gabin/Desktop/DECO3200_A4/DECO3200-A4/group-project/src/components/DishCard.js"],"sourcesContent":["// This file contains dishes card within each country, under traditional dishes tab.\n\nconst PropTypes = require(\"prop-types\");\nimport React, { useReducer } from \"react\";\nimport \"./style.css\";\n\nexport const DishCard = ({\n  dishName = \"Dish name\",\n  dishNameCountry = \"Dish name\\nfrom CountryName\", //Format text\\ntext\n  dishIntro = \"elit, sed do eiusmod tempor incididunt ut labore \\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\",\n  cardType = \"Dish name\",\n  property1,\n}) => {\n  const [state, dispatch] = useReducer(reducer, {\n    property1: property1 || \"default\",\n  });\n\n  return (\n    <div\n      className={`dish-card ${state.property1}`}\n      onMouseLeave={() => {\n        dispatch({type: \"mouse_leave\"});\n      }}\n      onMouseEnter={() => {\n        dispatch({type: \"mouse_enter\"});\n      }}\n    >\n      <div className=\"overlap-group\">\n        {state.property1 === \"hover\" && (\n          <>\n            <p className=\"card-name\">\n              <span className=\"text-wrapper\">\n                {dishName}\n                <br />\n              </span>\n            \n              {dishNameCountry.split(\"\\n\").map((line, index) => ( //Ensure dishNameCountry always has the format \"text\\ntext\" \n                <span key={index} className={index === 0 ? \"span\" : \"text-wrapper\"}>\n                  {line}\n                </span>\n              ))}\n            </p>\n            <div className=\"card-text\">Learn More &gt;</div>\n          </>\n        )}\n      </div>\n      {state.property1 === \"default\" && (\n        <>\n          <div className=\"overlap\">\n            <div className=\"div\">\n              <div className=\"card-name-2\">{dishName}</div>\n              <img\n                className=\"card-deco-line\"\n                alt=\"Card deco line\"\n                src=\"https://c..svg\"\n              />\n            </div>\n            <img className=\"card-img\" alt=\"Card img\" src=\"https://c..png\" />\n            <p className=\"card-intro\">{dishIntro}</p>\n          </div>\n          <div className=\"card-text-2\">{cardType}</div>\n          <div className=\"card-indication\">&gt;</div>\n        </>\n      )}\n\n      {state.property1 === \"hover\" && (\n        <>\n          <img className=\"img\" alt=\"Card img\" src=\"https://x.png\" />\n          <img\n            className=\"card-deco-line-2\"\n            alt=\"Card deco line\"\n            src=\"https://2.svg\"\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"mouse_enter\":\n      return {\n        ...state,\n        property1: \"hover\",\n      };\n    case \"mouse_leave\":\n      return {\n        ...state,\n        property1: \"default\",\n      };\n    default:\n      return state;\n  }\n}\n\nDishCard.propTypes = {\n  dishName: PropTypes.string,\n  dishNameCountry: PropTypes.string,\n  dishIntro: PropTypes.string,\n  countryName: PropTypes.string,\n  cardType: PropTypes.string,\n  property1: PropTypes.oneOf([\"hover\", \"default\"]),\n};\n\nexport const PropertyHover = () => {\n  return <DishCard property1=\"hover\" />;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}